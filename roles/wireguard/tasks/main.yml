---
- name: Install Docker Module for Python
  ansible.builtin.pip:
    name: boto3

- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: "{{ docker_dir }}/wg-easy"
    state: directory
    mode: '0755'

- name: Check for config files
  block:
    - name: Check for wg0.conf
      ansible.builtin.stat:
        path: /opt/docker/wg-easy/wg0.conf
      register: wg0conf
    - name: Check for wg0.json
      ansible.builtin.stat:
        path: /opt/docker/wg-easy/wg0.json
      register: wg0json

- name: Get config files from S3
  block:
    - name: Get wg0.conf
      amazon.aws.s3_object:
        aws_access_key_id: '{{ aws_access_key_id }}'
        aws_secret_access_key: '{{ aws_secret_access_key }}'
        bucket: husovschi-vps-bucket
        mode: get
        object: "/wg-easy/wg0.conf"
        dest: "{{ docker_dir }}/wg-easy/wg0.conf"
      when: not wg0conf.stat.exists
    - name: Get wg0.json
      amazon.aws.s3_object:
        aws_access_key_id: '{{ aws_access_key_id }}'
        aws_secret_access_key: '{{ aws_secret_access_key }}'
        bucket: husovschi-vps-bucket
        mode: get
        object: "wg-easy/wg0.json"
        dest: "{{ docker_dir }}/wg-easy/wg0.json"
      when: not wg0json.stat.exists

- name: Make sure the Wireguard container is created and running
  community.general.docker_container:
    name: "wg-easy"
    image: "weejewel/wg-easy:7"
    pull: yes
    networks:
      - name: wg_network
    sysctls:
      "net.ipv4.conf.all.src_valid_mark": "1"
      "net.ipv4.ip_forward": "1"
    capabilities:
      - net_admin
      - sys_module
    state: "started"
    env:
      "WG_HOST": "{{ wireguard_host }}"
      "WG_DEFAULT_DNS": "1.1.1.1"
      "WG_PORT": "{{ wireguard_port }}"
      "WG_PERSISTENT_KEEPALIVE": "25"
    ports:
      - "{{ wireguard_port }}:51820/udp"
      - "51821:51821"
    volumes:
      - "{{ docker_dir }}/wg-easy:/etc/wireguard"
    restart_policy: unless-stopped